_reset:
    jump _main

_intr:
    ; レジスタ退避
    store sp sp 0
    subi  sp sp 4
    store a0 sp 1
    store a1 sp 2
    store a2 sp 3
    store a3 sp 4
    ; 割り込み先にジャンプ
    breq  iid 0x0001 intr1
    breq  iid 0x0002 intr2
    breq  iid 0x0003 intr3
    breq  iid 0x0004 intr4
_iret:
    ; レジスタの復元
    load  a3 sp 4
    load  a2 sp 3
    load  a1 sp 2
    load  a0 sp 1
    addi  sp sp 4
    load  sp sp 0
    ; 割り込みから復帰
    jump zero ira zero

; プログラム開始前処理
_main:
    loadi sp 0xffff
    loadi fp 0xffff
    loadi ra _ret
    ori scr scr 0b0000'1000'0000'0000
    jump  zero zero main

; プログラム終了後処理
_ret:
    ori scr scr 0b1000'0000'0000'0000

; 各割り込みの処理
intr1:
    jump zero zero _iret
intr2:
    jump zero zero _iret
intr3:
    jump zero zero _iret
intr4:
    jump zero zero _iret

; メイン関数
main:
    jump zero zero _ret
